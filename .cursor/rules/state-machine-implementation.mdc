---
description: 
globs: 
alwaysApply: false
---
# State Machine Implementation

The poker engine uses a state machine to control game flow and enforce valid transitions between different game states.

## Key Components

1. `StateMachine<T>` (src/engine/StateMachine.ts)
   - Generic implementation that works with any state enum type
   - Manages transitions between states with validation
   - Supports conditional transitions and state change listeners
   - Provides reset functionality to return to initial state

2. `GameStateMachine` (src/engine/StateMachine.ts)
   - Extends the generic StateMachine with poker-specific states
   - Defines the standard poker game flow
   - Handles special transitions (e.g., all-in scenarios)

## Game States (src/types/index.ts)

The game progresses through these states in sequence:
- WAITING: Waiting for players to join
- STARTING: Setting up the game, assigning positions
- PREFLOP: First betting round with hole cards only
- FLOP: Second betting round after dealing 3 community cards
- TURN: Third betting round after dealing the 4th community card
- RIVER: Final betting round after dealing the 5th community card
- SHOWDOWN: Players reveal hands and winner determination
- FINISHED: Game has ended, handling results and cleanup

## Implementation Details

- State transitions are type-safe and validated
- Invalid transitions are prevented (e.g., skipping from PREFLOP to RIVER)
- Special transitions allow jumping to SHOWDOWN when all active players are all-in
- State change notifications enable components to react to state changes

## Testing

Tests in src/__tests__/engine/StateMachine.test.ts verify:
- Basic state transition functionality
- Game-specific transition rules
- Edge cases like all-in scenarios
- Conditional transitions
- State change listeners

## Integration

When implementing the Game Engine component, use the GameStateMachine to:
- Control the progression of betting rounds
- Handle special scenarios (all-in, everyone folded)
- Notify UI and other components about state changes
- Validate player actions based on current game state

