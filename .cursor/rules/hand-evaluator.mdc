---
description: Hand evaluation
globs: 
alwaysApply: false
---
# Hand Evaluator

The hand evaluator is designed to be flexible and support different poker variants. It can evaluate both high and low hands and handle different game-specific rules.

## Core Components

1. [HandEvaluator.ts](mdc:src/evaluator/HandEvaluator.ts)
   - Base interface and abstract class for hand evaluation
   - Defines common structures and methods
   - Supports both high and low hand evaluation

2. [HandUtils.ts](mdc:src/evaluator/HandUtils.ts)
   - Utility functions for hand evaluation
   - Methods for finding poker hand combinations
   - Supports different card ranking systems (ace high/low)

3. [TexasHoldemEvaluator.ts](mdc:src/evaluator/TexasHoldemEvaluator.ts)
   - Evaluator for Texas Hold'em game variant
   - Finds the best 5-card hand from 7 cards (2 hole + 5 community)

4. [OmahaEvaluator.ts](mdc:src/evaluator/OmahaEvaluator.ts)
   - Evaluator for Omaha game variant
   - Requires exactly 2 hole cards and 3 community cards

## Key Features

1. **Modular Design**
   - Abstract base class with concrete implementations
   - Easily extensible for new game variants

2. **Hand Evaluation**
   - Identifies all standard poker hands
   - Calculates hand rankings and tiebreakers
   - Determines the best hand according to game rules

3. **Hi-Lo Support**
   - Can evaluate both high and low hands
   - Configurable qualifier for low hands (typically 8 or better)
   - Handles special cases like treating Ace as low

4. **Game Variant Configuration**
   - [GameVariantConfig.ts](mdc:src/rules/GameVariantConfig.ts) - Configures rules for different game variants
   - Predefined configurations for common games
   - Factory functions for custom variants

## Usage Example

The [HandEvaluationExample.ts](mdc:src/examples/HandEvaluationExample.ts) file demonstrates:
- Evaluating Texas Hold'em hands
- Evaluating Omaha hands
- Working with Hi-Lo variants
- Using predefined game configurations

