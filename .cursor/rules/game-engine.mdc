---
description:
globs:
alwaysApply: false
---
# Game Engine

The Game Engine is the central coordinator of the poker game, managing the flow of the game and integrating all components.

## Key Components

1. **GameEngine** (src/engine/GameEngine.ts)
   - Core class that controls game flow and processes actions
   - Integrates with Table, Player, Deck, and State Machine models
   - Handles player actions and betting rounds
   - Manages card dealing and hand resolution

2. **GameEngineConfig**
   - Configuration for different game variants and rules
   - Includes game type, betting structure, blind levels
   - Configurable parameters for min/max players, timeouts

## Core Functionality

The Game Engine provides these key capabilities:

1. **Game Flow Management**
   - Uses StateMachine to control state transitions
   - Handles progression through betting rounds
   - Manages dealing of cards at appropriate times

2. **Player Action Processing**
   - Validates player actions against game rules
   - Handles fold, check, call, bet, raise actions
   - Manages betting limits based on game configuration

3. **Hand Resolution**
   - Determines winners using the appropriate HandEvaluator
   - Distributes pots to winners
   - Supports side pots for all-in scenarios

4. **Event System**
   - Notifies other components of game state changes
   - Provides hooks for UI updates and player notifications

## Usage Example

```typescript
// Create a game engine with default config (Texas Hold'em No Limit)
const gameEngine = new GameEngine();

// Add players to the table
const player1 = new Player("1", "Player 1", 1000, 0);
const player2 = new Player("2", "Player 2", 1000, 1);
gameEngine.addPlayer(player1);
gameEngine.addPlayer(player2);

// Listen for game events
gameEngine.on("stateChanged", ({ oldState, newState }) => {
  console.log(`Game state changed from ${oldState} to ${newState}`);
});

// Start the game
gameEngine.startGame();

// Process player actions
gameEngine.handleAction("1", new Action(player1, ActionType.RAISE, 20));
gameEngine.handleAction("2", new Action(player2, ActionType.CALL));
```

## Integration Points

The Game Engine integrates with:

1. **State Machine**: Controls game state transitions
2. **Table**: Manages players and community cards
3. **Hand Evaluator**: Evaluates player hands
4. **Pot Manager**: Handles pot calculations
5. **Rules Engine**: Configures game variants
